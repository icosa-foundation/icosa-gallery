# Generated by Django 5.0.6 on 2024-12-19 12:46

import datetime
import django.db.models.deletion
import icosa.models
from django.db import migrations, models


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# icosa.migrations.0004_auto_20240612_1303

class Migration(migrations.Migration):

    replaces = [('icosa', '0001_initial'), ('icosa', '0002_user_migrated'), ('icosa', '0003_asset_background_color_asset_color_space_and_more'), ('icosa', '0004_auto_20240612_1303'), ('icosa', '0005_alter_asset_color_space'), ('icosa', '0006_alter_asset_likes'), ('icosa', '0007_remove_asset_likes_user_likes_alter_asset_owner'), ('icosa', '0008_alter_asset_visibility'), ('icosa', '0009_userassetlike_alter_user_likes'), ('icosa', '0010_alter_user_url'), ('icosa', '0011_tag_remove_asset_tags_asset_tags'), ('icosa', '0012_alter_tag_name'), ('icosa', '0013_alter_tag_name'), ('icosa', '0014_alter_asset_orienting_rotation'), ('icosa', '0015_auto_20240626_0815'), ('icosa', '0016_alter_asset_thumbnail'), ('icosa', '0017_alter_asset_thumbnail_icosaformat'), ('icosa', '0018_icosaformat_is_mainfile'), ('icosa', '0019_asset_imported'), ('icosa', '0020_polyformat_polyresource'), ('icosa', '0021_remove_polyformat_url'), ('icosa', '0022_formatcomplexity'), ('icosa', '0023_delete_icosaformat'), ('icosa', '0024_orientingrotation_remove_asset_background_color_and_more'), ('icosa', '0025_polyresource_is_thumbnail'), ('icosa', '0026_polyresource_asset'), ('icosa', '0027_polyresource_contenttype'), ('icosa', '0028_alter_presentationparams_options_alter_user_email'), ('icosa', '0029_alter_user_displayname'), ('icosa', '0030_alter_userassetlike_user'), ('icosa', '0031_alter_userassetlike_user'), ('icosa', '0032_remove_presentationparams_orienting_rotation_and_more'), ('icosa', '0033_asset_thumbnail_contenttype'), ('icosa', '0034_remove_polyresource_is_thumbnail'), ('icosa', '0035_alter_formatcomplexity_options_alter_asset_formats'), ('icosa', '0036_asset_search_text'), ('icosa', '0037_user_access_token'), ('icosa', '0038_alter_asset_background_color'), ('icosa', '0039_alter_user_email'), ('icosa', '0040_alter_polyresource_file'), ('icosa', '0041_polyresource_external_url_alter_polyresource_file'), ('icosa', '0042_polyresource_role'), ('icosa', '0043_polyformat_archive_url'), ('icosa', '0044_polyresource_trianglecount'), ('icosa', '0045_asset_remix_ids'), ('icosa', '0046_rename_trianglecount_polyresource_triangle_count'), ('icosa', '0047_remove_polyresource_triangle_count'), ('icosa', '0048_alter_asset_curated'), ('icosa', '0049_asset_is_valid'), ('icosa', '0050_alter_polyresource_role'), ('icosa', '0051_rename_is_valid_asset_is_viewer_compatible'), ('icosa', '0052_remove_polyresource_role_polyformat_role'), ('icosa', '0053_asset_category_asset_downloads_and_more'), ('icosa', '0054_asset_likes_asset_views'), ('icosa', '0055_user_imported'), ('icosa', '0056_polyformat_lod_hint_polyformat_triangle_count_and_more'), ('icosa', '0057_alter_polyformat_role'), ('icosa', '0058_alter_polyformat_role'), ('icosa', '0059_alter_tag_options_asset_assets_is_view_1962a9_idx'), ('icosa', '0060_asset_has_blocks_asset_has_gltf1_asset_has_gltf2_and_more'), ('icosa', '0061_asset_has_fbx_asset_has_obj'), ('icosa', '0062_asset_rank'), ('icosa', '0063_alter_asset_rank'), ('icosa', '0064_alter_asset_license'), ('icosa', '0065_alter_asset_license'), ('icosa', '0066_alter_asset_license'), ('icosa', '0067_asset_camera_transform_asset_transform'), ('icosa', '0068_rename_camera_transform_asset_camera'), ('icosa', '0069_alter_asset_license'), ('icosa', '0070_alter_asset_license'), ('icosa', '0071_alter_polyformat_role'), ('icosa', '0072_alter_polyformat_role'), ('icosa', '0073_remove_asset_background_color_and_more'), ('icosa', '0074_remove_asset_imported_asset_imported_from'), ('icosa', '0075_asset_reported_by_asset_reported_time'), ('icosa', '0076_rename_reported_by_asset_last_reported_by_and_more'), ('icosa', '0077_alter_asset_license'), ('icosa', '0078_hiddenmediafilelog_alter_asset_thumbnail'), ('icosa', '0079_hiddenmediafilelog_deleted_from_source'), ('icosa', '0080_asset_state'), ('icosa', '0081_alter_asset_owner'), ('icosa', '0082_asset_preview_image'), ('icosa', '0083_asset_triangle_count'), ('icosa', '0084_user_is_claimed'), ('icosa', '0085_alter_user_email'), ('icosa', '0086_mastheadsection')]

    def forwards_0004(apps, schema_editor):
        Asset = apps.get_model("icosa", "Asset")
        assets = Asset.objects.all()
        assets.update(orienting_rotation=[0, 0, 0, 0])

    def backwards_0004(apps, schema_editor):
        Asset = apps.get_model("icosa", "Asset")
        assets = Asset.objects.all()
        assets.update(orienting_rotation="[0,0,0,0]")

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.BigIntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('formats', models.JSONField()),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private')], default='PRIVATE', max_length=255)),
                ('curated', models.BooleanField(blank=True, null=True)),
                ('polyid', models.CharField(blank=True, max_length=255, null=True)),
                ('polydata', models.JSONField(blank=True, null=True)),
                ('thumbnail', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assets',
            },
        ),
        migrations.CreateModel(
            name='Oauth2Client',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=48, unique=True)),
                ('client_secret', models.CharField(blank=True, max_length=120, null=True)),
                ('client_id_issued_at', models.IntegerField(default=0)),
                ('client_secret_expires_at', models.IntegerField(default=0)),
                ('client_metadata', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth2_client',
            },
        ),
        migrations.CreateModel(
            name='Oauth2Code',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('code', models.CharField(max_length=120, unique=True)),
                ('client_id', models.CharField(blank=True, max_length=48, null=True)),
                ('redirect_uri', models.TextField(blank=True, null=True)),
                ('response_type', models.TextField(blank=True, null=True)),
                ('auth_time', models.IntegerField()),
                ('code_challenge', models.TextField(blank=True, null=True)),
                ('code_challenge_method', models.CharField(blank=True, max_length=48, null=True)),
                ('scope', models.TextField(blank=True, null=True)),
                ('nonce', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'oauth2_code',
            },
        ),
        migrations.CreateModel(
            name='Oauth2Token',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('client_id', models.CharField(blank=True, max_length=48, null=True)),
                ('token_type', models.CharField(blank=True, max_length=40, null=True)),
                ('access_token', models.CharField(max_length=255, unique=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('scope', models.TextField(blank=True, null=True)),
                ('issued_at', models.IntegerField()),
                ('access_token_revoked_at', models.IntegerField(default=0)),
                ('refresh_token_revoked_at', models.IntegerField(default=0)),
                ('expires_in', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'oauth2_token',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('password', models.BinaryField()),
                ('displayname', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='DeviceCode',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('device_code', models.CharField(max_length=6)),
                ('expiry', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.user')),
            ],
            options={
                'db_table': 'devicecodes',
            },
        ),
        # migrations.RunSQL(
        #     sql='\n            CREATE VIEW public.expandedassets AS\n            SELECT assets.id,\n            assets.url,\n            assets.name,\n            assets.owner,\n            users.displayname AS ownername,\n            users.url AS ownerurl,\n            assets.formats,\n            assets.description,\n            assets.visibility,\n            assets.curated,\n            assets.polyid,\n            assets.polydata,\n            assets.thumbnail\n            FROM (public.assets\n            LEFT JOIN public.users ON ((assets.owner = users.id)));\n            ',
        #     reverse_sql='\n            DROP VIEW IF EXISTS public.expandedassets;\n            ',
        # ),
        migrations.AlterField(
            model_name='asset',
            name='visibility',
            field=models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private')], db_default='PRIVATE', default='PRIVATE', max_length=255),
        ),
        migrations.RenameField(
            model_name='devicecode',
            old_name='device_code',
            new_name='devicecode',
        ),
        migrations.AddField(
            model_name='user',
            name='migrated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='background_color',
            field=models.CharField(blank=True, max_length=7, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='color_space',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='create_time',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2020, 1, 1, 0, 0)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='asset',
            name='license',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='likes',
            field=models.ManyToManyField(to='icosa.user'),
        ),
        migrations.AddField(
            model_name='asset',
            name='orienting_rotation',
            field=models.JSONField(default='[0,0,0,0]'),
        ),
        migrations.AddField(
            model_name='asset',
            name='tags',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='update_time',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='displayname',
            field=models.CharField(max_length=50, verbose_name='Display Name'),
        ),
        migrations.AlterField(
            model_name='user',
            name='url',
            field=models.CharField(max_length=255, verbose_name='User Name / URL'),
        ),
        migrations.RunPython(
            code=forwards_0004,
            reverse_code=backwards_0004,
        ),
        migrations.AlterField(
            model_name='asset',
            name='color_space',
            field=models.CharField(choices=[('LINEAR', 'LINEAR'), ('GAMMA', 'GAMMA')], default='GAMMA', max_length=50),
        ),
        migrations.RemoveField(
            model_name='asset',
            name='likes',
        ),
        migrations.AlterField(
            model_name='asset',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='icosa.user'),
        ),
        migrations.AlterField(
            model_name='asset',
            name='visibility',
            field=models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('UNLISTED', 'Unlisted')], db_default='PRIVATE', default='PRIVATE', max_length=255),
        ),
        migrations.CreateModel(
            name='UserAssetLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_liked', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.asset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.user')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='likes',
            field=models.ManyToManyField(blank=True, through='icosa.UserAssetLike', to='icosa.asset'),
        ),
        migrations.AlterField(
            model_name='user',
            name='url',
            field=models.CharField(max_length=255, unique=True, verbose_name='User Name / URL'),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='asset',
            name='tags',
        ),
        migrations.AddField(
            model_name='asset',
            name='tags',
            field=models.ManyToManyField(blank=True, to='icosa.tag'),
        ),
        migrations.AlterField(
            model_name='asset',
            name='orienting_rotation',
            field=models.JSONField(default=icosa.models.default_orienting_rotation),
        ),
        # migrations.RunSQL(
        #     sql='\n            DROP VIEW IF EXISTS public.expandedassets;\n            ',
        #     reverse_sql='\n            CREATE VIEW public.expandedassets AS\n            SELECT assets.id,\n            assets.url,\n            assets.name,\n            assets.owner_id,\n            users.displayname AS ownername,\n            users.url AS ownerurl,\n            assets.formats,\n            assets.description,\n            assets.visibility,\n            assets.curated,\n            assets.polyid,\n            assets.polydata,\n            assets.thumbnail\n            FROM (public.assets\n            LEFT JOIN public.users ON ((assets.owner_id = users.id)));\n            ',
        # ),
        migrations.AlterField(
            model_name='asset',
            name='thumbnail',
            field=models.ImageField(blank=True, max_length=255, null=True, upload_to=icosa.models.thumbnail_upload_path),
        ),
        migrations.AddField(
            model_name='asset',
            name='imported',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='PolyFormat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_type', models.CharField(max_length=255)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.asset')),
                ('archive_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('role', models.IntegerField(blank=True, choices=[(1, 'Original OBJ File'), (2, 'Tilt File'), (4, 'Unknown GLTF File'), (6, 'Original FBX File'), (7, 'Blocks File'), (8, 'USD File'), (11, 'HTML File'), (12, 'Original glTF File'), (13, 'Tour Creator Experience'), (15, 'JSON File'), (16, 'lullmodel File'), (17, 'sand File'), (18, 'GLB File'), (19, 'sand File'), (20, 'sandc File'), (21, 'pb File'), (22, 'Unknown GLTF File'), (24, 'Original Triangulated OBJ File'), (25, 'JPG (Buggy)'), (26, 'USDZ File'), (30, 'Updated glTF File'), (32, 'Editor settings pb file'), (35, 'Unknown GLTF File'), (36, 'Unknown GLB File'), (38, 'Unknown GLB File'), (1000, 'Polygone Tilt File'), (1001, 'Polygone Blocks File'), (1002, 'Polygone GLB File'), (1003, 'Polygone GLTF File'), (1004, 'Polygone OBJ File'), (1005, 'Polygone FBX File')], null=True)),
                ('lod_hint', models.PositiveIntegerField(blank=True, null=True)),
                ('triangle_count', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='asset',
            name='background_color',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='color_space',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='orienting_rotation',
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='displayname',
            field=models.CharField(max_length=255, verbose_name='Display Name'),
        ),
        migrations.AlterField(
            model_name='userassetlike',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likedassets', to='icosa.user'),
        ),
        migrations.AddField(
            model_name='asset',
            name='background_color',
            field=models.CharField(blank=True, help_text='A valid css colour, such as #00CC83', max_length=7, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='color_space',
            field=models.CharField(choices=[('LINEAR', 'LINEAR'), ('GAMMA', 'GAMMA')], default='GAMMA', max_length=50),
        ),
        migrations.AddField(
            model_name='asset',
            name='orienting_rotation_w',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='orienting_rotation_x',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='orienting_rotation_y',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='orienting_rotation_z',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='thumbnail_contenttype',
            field=models.CharField(blank=True, null=True, max_length=64),
        ),
        migrations.AlterField(
            model_name='asset',
            name='formats',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='search_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='access_token',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='remix_ids',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='asset',
            name='curated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='is_viewer_compatible',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='PolyResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_root', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, max_length=1024, null=True, upload_to=icosa.models.format_upload_path)),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='icosa.polyformat')),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='icosa.asset')),
                ('contenttype', models.CharField(max_length=255, null=True)),
                ('external_url', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='category',
            field=models.CharField(blank=True, choices=[('MISCELLANEOUS', 'Miscellaneous'), ('ANIMALS', 'Animals & Pets'), ('ARCHITECTURE', 'Architecture'), ('ART', 'Art'), ('CULTURE', 'Culture & Humanity'), ('EVENTS', 'Current Events'), ('FOOD', 'Food & Drink'), ('HISTORY', 'History'), ('HOME', 'Furniture & Home'), ('NATURE', 'Nature'), ('OBJECTS', 'Objects'), ('PEOPLE', 'People & Characters'), ('PLACES', 'Places & Scenes'), ('SCIENCE', 'Science'), ('SPORTS', 'Sports & Fitness'), ('TECH', 'Tools & Technology'), ('TRANSPORT', 'Transport'), ('TRAVEL', 'Travel & Leisure')], max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='downloads',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='asset',
            name='historical_likes',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='asset',
            name='historical_views',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='asset',
            name='likes',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='asset',
            name='views',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='imported',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterModelOptions(
            name='tag',
            options={'ordering': ['name']},
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['is_viewer_compatible', 'visibility'], name='assets_is_view_1962a9_idx'),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_blocks',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_gltf1',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_gltf2',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_gltf_any',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_tilt',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_fbx',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='has_obj',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='asset',
            name='rank',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='asset',
            name='transform',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='asset',
            name='camera',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='polyformat',
            name='role',
            field=models.IntegerField(blank=True, choices=[(1, 'Original OBJ File'), (2, 'Tilt File'), (4, 'Unknown GLTF File A'), (6, 'Original FBX File'), (7, 'Blocks File'), (8, 'USD File'), (11, 'HTML File'), (12, 'Original glTF File'), (13, 'Tour Creator Experience'), (15, 'JSON File'), (16, 'lullmodel File'), (17, 'sand File A'), (18, 'GLB File'), (19, 'sand File B'), (20, 'sandc File'), (21, 'pb File'), (22, 'Unknown GLTF File B'), (24, 'Original Triangulated OBJ File'), (25, 'JPG (Buggy)'), (26, 'USDZ File'), (30, 'Updated glTF File'), (32, 'Editor settings pb file'), (35, 'Unknown GLTF File C'), (36, 'Unknown GLB File A'), (38, 'Unknown GLB File B'), (1000, 'Polygone Tilt File'), (1001, 'Polygone Blocks File'), (1002, 'Polygone GLB File'), (1003, 'Polygone GLTF File'), (1004, 'Polygone OBJ File'), (1005, 'Polygone FBX File')], null=True),
        ),
        migrations.RemoveField(
            model_name='asset',
            name='background_color',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='color_space',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='orienting_rotation_w',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='orienting_rotation_x',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='orienting_rotation_y',
        ),
        migrations.RemoveField(
            model_name='asset',
            name='orienting_rotation_z',
        ),
        migrations.AddField(
            model_name='asset',
            name='presentation_params',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='asset',
            name='imported',
        ),
        migrations.AddField(
            model_name='asset',
            name='imported_from',
            field=models.CharField(blank=True, null=True, max_length=255),
        ),
        migrations.AddField(
            model_name='asset',
            name='last_reported_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_assets', to='icosa.user'),
        ),
        migrations.AddField(
            model_name='asset',
            name='last_reported_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='asset',
            name='license',
            field=models.CharField(blank=True, choices=[('', 'No license chosen'), ('CREATIVE_COMMONS_BY_3_0', 'CC BY Attribution 3.0 International'), ('CREATIVE_COMMONS_BY_ND_3_0', 'CC BY-ND Attribution-NoDerivatives 3.0 International'), ('CREATIVE_COMMONS_BY_4_0', 'CC BY Attribution 4.0 International'), ('CREATIVE_COMMONS_BY_ND_4_0', 'CC BY-ND Attribution-NoDerivatives 4.0 International'), ('CREATIVE_COMMONS_0', 'CC0 1.0 Universal'), ('ALL_RIGHTS_RESERVED', 'All rights reserved')], max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='asset',
            name='thumbnail',
            field=models.ImageField(blank=True, max_length=1024, null=True, upload_to=icosa.models.thumbnail_upload_path),
        ),
        migrations.CreateModel(
            name='HiddenMediaFileLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_asset_id', models.BigIntegerField()),
                ('file_name', models.CharField(max_length=1024)),
                ('deleted_from_source', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='state',
            field=models.CharField(choices=[('BARE', 'Bare'), ('UPLOADING', 'Uploading'), ('COMPLETE', 'Complete'), ('FAILED', 'Failed')], db_default='BARE', default='BARE', max_length=255),
        ),
        migrations.AlterField(
            model_name='asset',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='icosa.user'),
        ),
        migrations.AddField(
            model_name='asset',
            name='preview_image',
            field=models.ImageField(blank=True, max_length=1024, null=True, upload_to=icosa.models.thumbnail_upload_path),
        ),
        migrations.AddField(
            model_name='asset',
            name='triangle_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='is_claimed',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(blank=True, max_length=255, null=True),
        ),
        migrations.CreateModel(
            name='MastheadSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=1024, null=True, upload_to=icosa.models.thumbnail_upload_path)),
                ('url', models.CharField(blank=True, help_text="URL to link to in place of an asset's viewer page.", max_length=1024, null=True)),
                ('headline_text', models.CharField(blank=True, help_text="Text displayed in place of an asset's name.", max_length=1024, null=True)),
                ('sub_text', models.CharField(blank=True, help_text="Text displayed in place of an asset's owner's name.", max_length=1024, null=True)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='icosa.asset')),
            ],
        ),
    ]
